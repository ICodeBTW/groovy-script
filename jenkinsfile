pipeline {
    agent any
    
    environment {
        BEBE="This is envi"  
    }

    stages {
        stage("Test"){
            steps{

            script{              
                    env.Works = "This works lolol"
                }            
             }
        }
        // stage("ansible deploy")
        // {

        //     steps{
        //         script{
        //         sh """ 

        //             ansible-playbook ansible/customgroovy.yaml
        //         """
        //     }
        //     }

        // }
        stage('Email Test') {
            
            steps {
                echo 'Hello World'
                script{
                env.BEBE = "Sadge works only from here :/"
                 emailext body: '''${SCRIPT, template="sample-groovy-new.template"}''',  subject: 'test1',  saveOutput: true
                // env.body = '''${SCRIPT, template="groovy-html.template"}'''
                // sh "echo ${env.body}"
                sh """ cat Always-\${BUILD_NUMBER}.txt > success-email.html """
                    
                }
            }
        }

        stage('Testing for failed email') {
            steps {
               script{
                 env.result = hudson.model.Result.FAILURE
                 emailext body: '''${SCRIPT, template="sample-groovy-new-fail.template"}''',  subject: 'test1',  saveOutput: true
                 sh """ cat Always-\${BUILD_NUMBER}.txt > failure-email.html """
                }
            }
        }

        stage('Testing if things work') {
            steps {
               script{

                   sh "pytest -v"
                  
                }
            }
        }

       
        
    }
   
}

